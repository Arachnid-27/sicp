(define (make-table same-key?)
        (define (assoc key records)
                (cond ((null? records) ())
                      ((same-key? key (car records)) (car records))
                      (else (assoc key (cdr records)))))
        (let ((local-table (list '*table*)))
             (define (lookup key-1 key-2)
                     (let ((subtable (assoc key-1 (cdr local-table))))
                          (if (null? subtable)
                              #f
                              (let ((record (assoc key-2 (cdr subtable))))
                                   (if (null? record)
                                       #f
                                       (cdr record))))))
             (define (insert! key-1 key-2 value)
                     (let ((subtable (assoc key-1 (cdr local-table))))
                          (if (null? subtable)
                              (set-cdr! local-table
                                        (cons (list key-1 (cons-key-2 value))
                                              (cdr local-table)))
                              (let ((record (assoc key-2 (cdr subtable))))
                                   (if (null? record)
                                       (set-cdr! subtable
                                                 (cons (cons key-2 value)
                                                       (cdr subtable)))
                                       (set-cdr! record value)))))
                     'ok)
             (define (dispatch m)
                     (cond ((eq? m 'lookup-proc) lookup)
                           ((eq? m 'insert-proc!) insert!)
                           (else (error "Unknown operation -- TABLE" m))))
        dispatch))
